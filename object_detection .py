# -*- coding: utf-8 -*-
"""object detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ky8ifF3AyLpx5q0eIHSBmRv7fm_C79L9
"""

# Commented out IPython magic to ensure Python compatibility.
import cv2
import matplotlib.pyplot as plt
# %matplotlib inline

!pip install --upgrade opencv-python

config_file = "ssd_mobilenet_v3_large_coco_2020_01_14.pbtxt"
frozen_model = "frozen_inference_graph.pb"

model = cv2.dnn_DetectionModel(frozen_model,config_file)

labels = []
file_name = "labels.txt"

with open(file_name, "rt") as file:
  labels = file.read().rstrip('\n').split("\n")

print("The length of labels is ", len(labels))
labels[:5]    # first 5 labels

img1 = cv2.imread("/content/image.png")
img2 = cv2.imread("/content/image 2.jpeg")
img3 = cv2.imread("/content/img 3.jpg")

from google.colab.patches import cv2_imshow
plt.imshow(img1)
plt.figure()
plt.imshow(img2)
plt.figure()
plt.imshow(img3)

model.setInputSize(320,320)
model.setInputScale(1/127.5)   # 255 / 2 = 127.5
model.setInputMean((127.5, 127.5, 127.5))
model.setInputSwapRB(True)

plt.imshow(cv2.cvtColor(img1, cv2.COLOR_BGR2RGB))

model.detect(img3, confThreshold = 0.5)

font_scale = 1.5
font = cv2.FONT_HERSHEY_PLAIN
for img in [img1, img2, img3]:
  class_label, probabilty, boxes = model.detect(img, confThreshold = 0.5)
  for label, prob, box in zip(class_label, probabilty,boxes):
    cv2.rectangle(img, box, (255,0,0), 3)
    cv2.putText(img, labels[label-1],( box[0]+10 , box[1] + 40) , font , font_scale, color = (0,0,255) , thickness  = 2)
  plt.figure()
  plt.imshow(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))

"""Video capture"""

video = cv2.VideoCapture("/content/video.mp4")
if not video.isOpened():
  raise print("Cannot open the video")

font_scale = 1.5
font = cv2.FONT_HERSHEY_PLAIN

while True:

  ret, img = video.read()

  if ret:
    class_label, probabilty, boxes = model.detect(img, confThreshold = 0.6)
        if (len(class_label) != 0):
          for label, prob, box in zip(class_label, probabilty,boxes):
              if label <= 80 :
                cv2.rectangle(img, box, (255,0,0), 3)
                cv2.putText(img, labels[label-1],( box[0]+10 , box[1] + 40) , font , font_scale, color = (0,0,255) , thickness  = 2)
        cv2.imshow(\"Video\" , img)
        if cv2.waitKey(1) & 0xFF == ord('q'):
          break
video.release()
cv2.destroyAllWindows()

